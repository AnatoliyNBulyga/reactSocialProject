{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","text","DialogItem","path","id","dialog","to","activeClassName","active","avatar","src","alt","name","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","add_message","Field","component","Textarea","placeholder","validate","required","maxLength30","minLength2","Dialogs","dialogs","dialogsPage","messages","dialogsElements","map","d","key","messagesElements","m","isAuth","dialogsItems","message_area","formData","addMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,YAAc,+B,oBCAxGD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,2BAA2B,OAAS,2BAA2B,YAAc,kC,yGCQ7HC,EANC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMI,O,0BCY3BC,EAbI,SAACL,GAChB,IAAIM,EAAO,YAAcN,EAAMO,GAC/B,OACI,yBAAKN,UAAWC,IAAEM,QAEd,kBAAC,IAAD,CAASC,GAAIH,EAAMI,gBAAiBR,IAAES,QAClC,yBAAKV,UAAWC,IAAEU,OAAQC,IAAKb,EAAMY,OAAQE,IAAKd,EAAMe,OACvDf,EAAMe,Q,yCCuCjBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,aAAcnB,UAAWC,IAAEmB,aAC7C,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXT,KAAK,iBACLU,YAAa,qBACbC,SAAU,CAACC,IAAUC,IAAaC,OAEtC,mDAMGC,EA3CC,SAAC9B,GACb,IAAI+B,EAAU/B,EAAMgC,YAAYD,QAC5BE,EAAWjC,EAAMiC,SACjBC,EAAkBH,EAAQI,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAarB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE7B,GAAIA,GAAI6B,EAAE7B,GAAIK,OAAQwB,EAAExB,YAE9F0B,EAAmBL,EAASE,KAAK,SAAAI,GAAC,OAAM,kBAAC,EAAD,CAASnC,KAAMmC,EAAEnC,KAAMiC,IAAKE,EAAEhC,GAAIA,GAAIgC,EAAEhC,QAEpF,IAAKP,EAAMwC,OAAQ,OAAO,kBAAC,IAAD,CAAU/B,GAAI,WAMxC,OACI,yBAAKR,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEuC,cACZP,GAEN,yBAAKjC,UAAWC,IAAEwC,cACd,yBAAKzC,UAAWC,IAAE+B,UACZK,GAEN,kBAACtB,EAAD,CAAqBG,SAbX,SAAAwB,GAClB3C,EAAM4C,WAAWD,EAASE,sB,gDCf9BC,EAA6B,SAACC,GAAD,MAAY,CACzCP,OAAQO,EAAMC,KAAKR,S,OCeRS,sBAASC,aAdA,SAACH,GACjB,MAAO,CACCf,YAAae,EAAMf,YACnBC,SAAUc,EAAMf,YAAYC,aAGjB,SAACkB,GACpB,MAAO,CACCP,WAAY,SAACC,GACLM,EAASC,YAAwBP,UDPzB,SAACQ,GAAe,IACtCC,EADqC,iLAInC,OAAKC,KAAKvD,MAAMwC,OACT,kBAACa,EAAcE,KAAKvD,OADI,kBAAC,IAAD,CAAUS,GAAI,eAJV,GACX+C,IAAMH,WAWtC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCE9DL,CAAyEnB","file":"static/js/4.53bab700.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__4qdcu\",\"messages\":\"Dialogs_messages__1eERF\",\"add_message\":\"Dialogs_add_message__3kD95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2RYpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__tN1qf\",\"active\":\"DialogItem_active__IoyZo\",\"avatar\":\"DialogItem_avatar__Oa46Z\",\"add_message\":\"DialogItem_add_message__3_Rya\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.text}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                <img className={s.avatar} src={props.avatar} alt={props.name}/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItems from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLength30, minLength2, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogs = props.dialogsPage.dialogs;\r\n    let messages = props.messages;\r\n    let dialogsElements = dialogs.map( d => <DialogItems name={d.name} key={d.id} id={d.id} avatar={d.avatar}/>);\r\n\r\n    let messagesElements = messages.map( m =>   <Message text={m.text} key={m.id} id={m.id} /> );\r\n    \r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    const addNewMessage = formData => {\r\n        props.addMessage(formData.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.message_area}>\r\n                <div className={s.messages}>\r\n                    { messagesElements } \r\n                </div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.add_message}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newMessageBody\"\r\n                placeholder={\"Enter your message\"}\r\n                validate={[required, maxLength30, minLength2]}\r\n            />\r\n            <button>Add Message</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import {addMessageActionCreator} from \"../../redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n                dialogsPage: state.dialogsPage,\r\n                messages: state.dialogsPage.messages\r\n        }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n        return {\r\n                addMessage: (newMessageBody) => {\r\n                        dispatch(addMessageActionCreator(newMessageBody));\r\n                }\r\n        }\r\n}\r\n\r\nexport default compose( connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}