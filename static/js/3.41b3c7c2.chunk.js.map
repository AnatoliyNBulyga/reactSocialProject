{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","description","src","photos","small","alt","fullName","Preloader","Post","item","message","like_area","like_count","like","MyPosts","React","memo","posts","postsElements","reverse","map","p","text","key","id","likesCount","AddCommentReduxForm","onSubmit","formData","addPost","newCommentText","reduxForm","form","postEditor","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","maxLength30","minLength2","compose","connect","state","profilePage","newPostText","dispatch","addComment","addPostActionCreator","Profile","left_content","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.41b3c7c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__2POyl\",\"description_body\":\"ProfileInfo_description_body__2tw90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left_content\":\"Profile_left_content__2PQ_m\",\"header_bg\":\"Profile_header_bg__1Metg\",\"description\":\"Profile_description__2lWhq\",\"description_body\":\"Profile_description_body__2Cwdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3lrnh\",\"postEditor\":\"MyPosts_postEditor__1txiC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__oP7ud\",\"message\":\"Post_message__2MThz\",\"like\":\"Post_like__2xY_d\",\"like_count\":\"Post_like_count__2k7jN\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n       let [editMode, setEditMode] = useState(false);\r\n       let [status, setStatus] = useState(props.status);\r\n       useEffect( () => {\r\n           setStatus(props.status);\r\n       }, [props.status]);\r\n       const activateEditMode = () => {\r\n           setEditMode(true);\r\n       }\r\n       const deactivateEditMode = () => {\r\n           setEditMode(false);\r\n           props.updateStatus(status);\r\n           // props.updateStatus(this.state.status);\r\n       }\r\n       const onStatusChange = e => {\r\n            setStatus(e.currentTarget.value);\r\n       }\r\n       return (\r\n           <div>\r\n               {!editMode &&\r\n                   <div>\r\n                       <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                   </div>\r\n               }\r\n               {editMode &&\r\n                   <div>\r\n                       <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                   </div>\r\n               }\r\n           </div>\r\n       )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.description}>\r\n            <img src={props.profile.photos.small} alt={props.profile.fullName}/>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n   return (\r\n      <div className={s.item}>\r\n\r\n         <img src=\"https://img1.looper.com/img/gallery/disney-may-take-over-development-of-avatar-x-men-franchises/intro-1533929612.jpg\" alt=\"ava\"/>\r\n\r\n         <div className={s.message}>{props.message}</div>\r\n\r\n         <div className={s.like_area}>\r\n            <div className={s.like_count}>{props.like_count}</div>\r\n            <div className={s.like}>like</div>\r\n         </div>\r\n      </div>       \r\n   );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength30, minLength2, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let posts = props.posts;\r\n    let postsElements =\r\n        [...posts]\r\n            .reverse() /* ! reverse all posts with copy of post array */\r\n            .map(p => <Post message={p.text} key={p.id} like_count={p.likesCount}/>);\r\n\r\n    const addComment = formData => {\r\n        props.addPost(formData.newCommentText);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddCommentReduxForm onSubmit={addComment}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddComment = (props) => {\r\n    return (\r\n            <form className={s.postEditor} onSubmit={props.handleSubmit}>\r\n                <Field\r\n                    component={Textarea}\r\n                    name=\"newCommentText\"\r\n                    placeholder={\"Add comment\"}\r\n                    validate={[required, maxLength30, minLength2]}\r\n                />\r\n                <button>Add post</button>\r\n            </form>\r\n    );\r\n\r\n}\r\nconst AddCommentReduxForm = reduxForm({form:\"addCommentProfileForm\"})(AddComment);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n             posts: state.profilePage.posts,\r\n             newPostText: state.profilePage.newPostText\r\n     }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n      return {\r\n              addPost: (addComment) => {\r\n                      dispatch(addPostActionCreator(addComment));\r\n              }\r\n      }\r\n}\r\n\r\nexport default compose( connect(mapStateToProps, mapDispatchToProps))(MyPosts);","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from  './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n   return (\r\n      <div className={s.left_content}>\r\n         <ProfileInfo profile={props.profile}\r\n                      status={props.status}\r\n                      updateStatus={props.updateStatus}\r\n         />\r\n         <MyPostsContainer />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    /*withAuthRedirect*/\r\n)(ProfileContainer);"],"sourceRoot":""}